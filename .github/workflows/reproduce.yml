name: Reproduce notebook

on:
  workflow_dispatch:
    inputs:
      notebook_path:
        description: 'Path to the notebook to execute'
        required: true
        default: 'MertYesilyurt_Report.ipynb'
      requirements_path:
        description: 'Path to the requirements file'
        required: true
        default: 'requirements.txt'
  push:
    branches: [ main, master ]

jobs:
  reproduce:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Determine paths (with defaults for push)
        id: paths
        run: |
          NOTEBOOK="${{ github.event.inputs.notebook_path || 'MertYesilyurt_Report.ipynb' }}"
          REQS="${{ github.event.inputs.requirements_path || 'requirements.txt' }}"
          echo "notebook_path=$NOTEBOOK" >> $GITHUB_OUTPUT
          echo "requirements_path=$REQS" >> $GITHUB_OUTPUT

      - name: Show repo contents (debug)
        run: |
          echo "Repo root listing:"
          ls -la
          echo "Requested notebook:"
          ls -la "${{ steps.paths.outputs.notebook_path }}" || echo "Notebook not found"
          echo "Requested requirements:"
          ls -la "${{ steps.paths.outputs.requirements_path }}" || echo "Requirements file not found"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install requirements + tooling
        run: |
          REQS="${{ steps.paths.outputs.requirements_path }}"
          if [ -f "$REQS" ]; then
            echo "Installing from $REQS"
            python -m pip install -r "$REQS"
          else
            echo "No requirements file at $REQS, skipping requirements install"
          fi
          # Ensure papermill, nbformat, and ipykernel are installed
          python -m pip install papermill nbformat ipykernel

      - name: Register Python kernel as python3
        run: |
          # Install a Jupyter kernel spec named 'python3'
          python -m ipykernel install --user --name python3 --display-name "Python 3"

      - name: Execute notebook with Papermill
        run: |
          NB="${{ steps.paths.outputs.notebook_path }}"
          mkdir -p outputs
          if [ ! -f "$NB" ]; then
            echo "Notebook $NB not found!" >&2
            exit 1
          fi
          papermill "$NB" outputs/executed_notebook.ipynb \
            --cwd . \
            --kernel python3

      - name: List outputs
        run: |
          echo "Outputs directory:"
          ls -la outputs || true
          echo "data-clean/processed (if created):"
          ls -la data-clean/processed || true

      - name: Upload executed notebook and processed outputs
        uses: actions/upload-artifact@v4
        with:
          name: reproduction-results
          path: |
            outputs/executed_notebook.ipynb
            data-clean/processed
